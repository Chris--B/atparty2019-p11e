#version 460
#define CALC_NORMAL(OUTPUT,VERT_ID,POSITIONS,INDICES){uint vi0=(VERT_ID)-((VERT_ID)%3);vec3 v0=POSITIONS[INDICES[(vi0+0)%INDICES.length()]];vec3 v1=POSITIONS[INDICES[(vi0+1)%INDICES.length()]];vec3 v2=POSITIONS[INDICES[(vi0+2)%INDICES.length()]];OUTPUT=cross(v1-v0,v2-v1);}
float PI=3.1415926535897932384626433832795;vec3 c_pos[24]={vec3(-1,1,-1),vec3(-1,1,1),vec3( 1,1,1),vec3( 1,1,-1),vec3( 1,1,1),vec3( 1,-1,1),vec3( 1,-1,-1),vec3( 1,1,-1),vec3(-1,-1,-1),vec3( 1,-1,-1),vec3( 1,-1,1),vec3(-1,-1,1),vec3(-1,-1,-1),vec3(-1,-1,1),vec3(-1,1,1),vec3(-1,1,-1),vec3( 1,1,1),vec3(-1,1,1),vec3(-1,-1,1),vec3( 1,-1,1),vec3(-1,-1,-1),vec3(-1,1,-1),vec3( 1,1,-1),vec3( 1,-1,-1),};uint c_index[36]={ 0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23,};vec3 t_pos[4]={vec3(-1,0,-1/1.41421356237),vec3( 1,0,-1/1.41421356237),vec3( 0,-1,1/1.41421356237),vec3( 0,1,1/1.41421356237),};uint t_index[12]={0,1,2,0,3,2,0,1,3,1,2,3,};vec3 shape_offets[65]={vec3( 0.0,0.0,0.0),vec3(-2,-2,-2),vec3(-2,-2,-1),vec3(-2,-2,0),vec3(-2,-2,1),vec3(-2,-1,-2),vec3(-2,-1,-1),vec3(-2,-1,0),vec3(-2,-1,1),vec3(-2,0,-2),vec3(-2,0,-1),vec3(-2,0,0),vec3(-2,0,1),vec3(-2,1,-2),vec3(-2,1,-1),vec3(-2,1,0),vec3(-2,1,1),vec3(-1,-2,-2),vec3(-1,-2,-1),vec3(-1,-2,0),vec3(-1,-2,1),vec3(-1,-1,-2),vec3(-1,-1,-1),vec3(-1,-1,0),vec3(-1,-1,1),vec3(-1,0,-2),vec3(-1,0,-1),vec3(-1,0,0),vec3(-1,0,1),vec3(-1,1,-2),vec3(-1,1,-1),vec3(-1,1,0),vec3(-1,1,1),vec3(0,-2,-2),vec3(0,-2,-1),vec3(0,-2,0),vec3(0,-2,1),vec3(0,-1,-2),vec3(0,-1,-1),vec3(0,-1,0),vec3(0,-1,1),vec3(0,0,-2),vec3(0,0,-1),vec3(0,0,0),vec3(0,0,1),vec3(0,1,-2),vec3(0,1,-1),vec3(0,1,0),vec3(0,1,1),vec3(1,-2,-2),vec3(1,-2,-1),vec3(1,-2,0),vec3(1,-2,1),vec3(1,-1,-2),vec3(1,-1,-1),vec3(1,-1,0),vec3(1,-1,1),vec3(1,0,-2),vec3(1,0,-1),vec3(1,0,0),vec3(1,0,1),vec3(1,1,-2),vec3(1,1,-1),vec3(1,1,0),vec3(1,1,1),};vec3 shape_scales[65]={vec3(30),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),vec3(0.8),};float shape_rots[65]={0,00,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340,350,360,370,380,390,400,410,420,430,440,450,460,470,480,490,500,510,520,530,540,550,560,570,580,590,600,610,620,630,};layout(location=0) uniform mat4 uProjView;layout(location=1) uniform float uTime;layout(location=0)out vec4 vRot;layout(location=1)out vec3 vWorldPos;layout(location=2)out vec3 vNormal;vec4 make_rot(vec3 axis,float degrees){float radians=degrees*PI/180;float s=sin(0.5*radians);float c=cos(0.5*radians);return vec4(s*normalize(axis),c);}vec4 qmul(vec4 q1,vec4 q2){return vec4((q2.xyz*q1.w)+(q1.xyz*q2.w)+cross(q1.xyz,q2.xyz),(q1.w*q2.w)-dot(q1.xyz,q2.xyz));}vec3 rotate_vector(vec3 v,vec4 r){vec4 r_c=r*vec4(-1,-1,-1,1);return qmul(r,qmul(vec4(v,0),r_c)).xyz;}bool is_cube(){return (gl_VertexID/c_index.length())%3==0;}void main(){uint VERTS_PER_SHAPE=c_index.length();uint shape_id=gl_VertexID/VERTS_PER_SHAPE;uint index;if(is_cube()){index=c_index[gl_VertexID%VERTS_PER_SHAPE];} else{index=t_index[gl_VertexID%VERTS_PER_SHAPE];}vec3 offset=4*shape_offets[shape_id];vec3 scale=shape_scales[shape_id];if(!is_cube()){scale *=sqrt(2);}vec4 rot=make_rot(vec3(1,1,0),shape_rots[shape_id]);mat4 model_offset=mat4(vec4(1,0,0,0),vec4(0,1,0,0),vec4(0,0,1,0),vec4(offset,1));mat4 model_scale=mat4(vec4(scale.x,0,0,0),vec4(0,scale.y,0,0),vec4(0,0,scale.z,0),vec4(0,0,0,1));mat4 model=model_offset*model_scale;vRot=rot;vec3 v_pos;if(is_cube()){v_pos=c_pos[index];} else{v_pos=t_pos[index];}vec4 pos=vec4(rotate_vector(v_pos,rot),1);gl_Position=uProjView*model*pos;vWorldPos=(model*pos).xyz;vec3 normal=vec3(1,0,1);if(is_cube()){CALC_NORMAL(normal,gl_VertexID,c_pos,c_index);} else{CALC_NORMAL(normal,gl_VertexID,t_pos,t_index);}normal=normalize(normal);if(shape_id==0){normal=-normal;}vNormal=normal;}
