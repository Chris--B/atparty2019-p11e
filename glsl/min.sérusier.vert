#version 460
#define CIRCLE2(t,r) ((r)*vec2(cos(D2R*(t)),sin(D2R*(t))))
#define CALC_NORMAL(OUTPUT,VERT_ID,POSITIONS,INDICES){uint vi0=(VERT_ID)-((VERT_ID)%3);v3 v0=POSITIONS[INDICES[(vi0+0)%INDICES.length()]];v3 v1=POSITIONS[INDICES[(vi0 +1)%INDICES.length()]];v3 v2=POSITIONS[INDICES[(vi0+2)%INDICES.length()]];OUTPUT=cross(v1-v0,v2-v1);}
#define v4 vec4
#define v3 vec3
float PI=3.14159;float D2R=PI/180.0;v3 c_pos[24]={v3(-1.,1.,-1.),v3(-1.,1.,1.),v3(1.,1.,1.),v3(1.,1.,-1.),v3(1.,1.,1.),v3(1.,-1.,1.),v3(1.,-1.,-1.),v3(1.,1.,-1.),v3(-1.,-1.,-1.),v3(1.,-1.,-1.),v3(1.,-1.,1.),v3(-1.,-1.,1.),v3(-1.,-1.,-1.),v3(-1.,-1.,1.),v3(-1.,1.,1.),v3(-1.,1.,-1.),v3(1.,-1.,1.),v3(-1.,-1.,1.),v3(-1.,1.,1.),v3(1.,1.,1.),v3(-1.,-1.,-1.),v3(-1.,1.,-1.),v3(1.,1.,-1.),v3(1.,-1.,-1.),};uint c_index[36]={0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23,};v3 t_pos[4]={v3(1,1,1),v3(1,-1,-1),v3(-1,1,-1),v3(-1,-1,1),};uint t_index[12]={0,2,1,0,2,3,0,3,1,1,3,2,};float shape_rots_0[]={0.,90.,39.8,43.1,33.6,42.0,31.6,47.4,40.7,36.5,44.2,49.9,32.0,41.8,30.7,46.4,49.9,38.8,39.5,43.9,36.1,36.7,39.6,33.0,};layout(location=0) uniform mat4 uProjView;layout(location=1) uniform float uTime;layout(location=0) out v4 vRot;layout(location=1) out v3 vWorldPos;layout(location=2) out v3 vNormal;v4 make_rot(v3 axis,float degrees){float radians=degrees*PI/180.;float s=sin(0.5*radians);float c=cos(0.5*radians);return v4(s*normalize(axis),c);}v4 qmul(v4 q1,v4 q2){return v4((q2.xyz*q1.w)+(q1.xyz*q2.w)+cross(q1.xyz,q2.xyz),(q1.w* q2.w)- dot(q1.xyz,q2.xyz));}v3 rotate_v(v3 v,v4 r){v4 r_c=r*v4(-1,-1,-1,1);return qmul(r,qmul(v4(v,0),r_c)).xyz;}v4 rotate_q(v4 r0,v4 r1){v4 r0_c=r0*v4(-1,-1,-1,1);return qmul(r1,qmul(r1,r0_c));}bool is_cube_0(){return (gl_VertexID/c_index.length()) !=1;}void scene_0(){uint VERTS_PER_SHAPE=c_index.length();uint shape_id=gl_VertexID/VERTS_PER_SHAPE;uint index;if(is_cube_0()){index=c_index[gl_VertexID%VERTS_PER_SHAPE];}else{index=t_index[gl_VertexID%VERTS_PER_SHAPE];}v3 offset=v3(CIRCLE2(5*uTime+ (shape_id*360./23.),20.),3);if(shape_id==0){offset=v3(0.);}else if(shape_id==1){offset=v3(0.,0.,5.);}v3 scale=v3(0.3);if(shape_id==0){scale=v3(30.);}else if(shape_id==1){scale=v3(7);}else if(shape_id > 24){scale=v3(0.);}mat4 model_offset=mat4(v4(1.,0.,0.,0.),v4(0.,1.,0.,0.),v4(0.,0.,1.,0.),v4(offset,1.));mat4 model_scale=mat4(v4(scale.x,0.,0.,0.),v4(0.,scale.y,0.,0.),v4(0.,0.,scale.z,0.),v4(0.,0.,0.,1.));mat4 model=model_offset*model_scale;v4 rot;if(shape_id >1){v4 p4=(model*v4(0.,0.,0.,1.));v3 p=p4.xyz/p4.w;v3 axis=normalize(p);rot=make_rot(axis,13.*shape_rots_0[shape_id]*uTime);}else if(shape_id==1){rot=make_rot(v3(1.,1.,0.),shape_rots_0[shape_id]);}else{rot=make_rot(v3(1.,1.,0.),shape_rots_0[0]);}if(shape_id==1){v4 rot2=make_rot(v3(0.,0.,1.),-0.05*shape_rots_0[shape_id]*uTime);rot=rotate_q(rot,rot2);}vRot=rot;v3 v_pos;if(is_cube_0()){v_pos=c_pos[index];}else{v_pos=t_pos[index];}v4 pos=v4(rotate_v(v_pos,rot),1.);gl_Position=uProjView*model*pos;vWorldPos=(model*pos).xyz;v3 normal=v3(1.,0.,1.);if(is_cube_0()){CALC_NORMAL(normal,gl_VertexID,c_pos,c_index);}else{CALC_NORMAL(normal,gl_VertexID,t_pos,t_index);}normal=normalize(normal);if(shape_id==0){normal=-normal;}vNormal=normal;}void main(){if(uTime<8.){scene_0();}}
